layer_points(fill = ~year)   %>%
add_axis("x", title = "Number of rentals per day") %>%
add_axis("y", title = "Average daily temperature in degrees fahrenheit")
x <- nrow(bikeshare)
sumCnt2011 = c()
sumCnt2012 = c()
sumWkend2011=c()
sumWkend2012=c()
#bikeshare$weekday[x] > 0 & bikeshare$weekday[x] < 6)
#bikeshare$weekday[x] == 6 | bikeshare$weekday[x] == 0
while (x > 0) {
if(bikeshare$workingday[x] == 1 )  {
if(bikeshare$year[x] == 0)
{ sumCnt2011[x]<-(bikeshare$cnt[x])}
if (bikeshare$year[x] == 1) {sumCnt2012[x]<-(bikeshare$cnt[x])}
}
if(bikeshare$workingday[x] != 1 && bikeshare$holiday[x] != 1)
{
if(bikeshare$year[x] == 0)
{ sumWkend2011[x]<-(bikeshare$cnt[x])}
if (bikeshare$year[x] == 1)
{sumWkend2012[x]<-(bikeshare$cnt[x])}
}
x <- x - 1
}
sumCnt2011 <-sumCnt2011[!is.na(sumCnt2011)]
sumCnt2012 <-sumCnt2012[!is.na(sumCnt2012)]
sumWkend2011 <-sumWkend2011[!is.na(sumWkend2011)]
sumWkend2012 <-sumWkend2012[!is.na(sumWkend2012)]
rev_2011_weekday<- sum(sumCnt2011)*10
cat("Annual 2011 revenue from weekday rides:", rev_2011_weekday,"\n")
rev_2012_weekday<-sum(sumCnt2012)*10
cat("Annual 2012 revenue from weekday rides:", rev_2012_weekday,"\n")
rev_2011_wkend <- sum(sumWkend2011)*12
cat("Annual 2011 revenue from weekend rides:", rev_2011_wkend,"\n")
rev_2012_wkend <- sum(sumWkend2012)*12
cat("Annual 2012 revenue from weekend rides:", rev_2012_wkend,"\n")
cleanBikeData<-data.frame(bikeshare$windspeed, bikeshare$humidity, bikeshare$season, bikeshare$weekday, bikeshare$weathersit, round(((bikeshare$atemp*50))*9/5+32, digits = 0), round(((bikeshare$temp*41))*9/5+32, digits = 0), bikeshare$dteday, bikeshare$cnt)
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.windspeed"] <- "windspeed"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.humidity"] <- "humidity"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.season"] <- "season"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.weekday"] <- "weekday"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.weathersit"] <- "weathersit"
names(cleanBikeData)[names(cleanBikeData) == "round...bikeshare.temp...41.....9.5...32..digits...0."] <- "temp"
names(cleanBikeData)[names(cleanBikeData) == "round...bikeshare.atemp...50.....9.5...32..digits...0."] <- "FeelsLike"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.dteday"] <- "date"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.cnt"] <- "cnt"
cor.weathersit <- cor.test(x = cleanBikeData$weathersit,
y = cleanBikeData$cnt)
cor.weathersit
cor.FeelsLike <- cor.test(x = cleanBikeData$FeelsLike,
y = cleanBikeData$cnt)
cor.FeelsLike
cor.temp <- cor.test(x = cleanBikeData$temp,
y = cleanBikeData$cnt)
cor.temp
cor.hum <- cor.test(x = cleanBikeData$humidity,
y = cleanBikeData$cnt)
cor.hum
weathersit<-cleanBikeData$weathersit
rentalCnt<-cleanBikeData$cnt
FeelsLike<-cleanBikeData$FeelsLike
temp<-cleanBikeData$temp
humiditiy<-round(cleanBikeData$humidity*100)
weathersit<-table(cleanBikeData$weathersit)
par(mfrow=c(2,2))
plot(x = temp, y = rentalCnt, main = "Temperature Correlation", col = "blue")
abline(lm(rentalCnt ~ temp), col = "blue")
legend("topleft", legend = paste("cor = ", round(cor(temp, rentalCnt), 4), sep = ""),lty = 1, col = "red")
plot(x = FeelsLike, y = rentalCnt, main = "Feels Like Temperature Correlation", col = "red")
abline(lm(rentalCnt ~ FeelsLike), col = "blue")
legend("topleft", legend = paste("cor = ", round(cor(FeelsLike, rentalCnt), 4), sep = ""),lty = 1, col = "blue")
plot(x = humiditiy, y = rentalCnt, main = "Humidity Correlation", col = "red")
abline(lm(rentalCnt ~ humiditiy), col = "blue")
legend("topleft", legend = paste("cor = ", round(cor(humiditiy, rentalCnt), 4), sep = ""),lty = 1, col = "blue")
barplot(weathersit)
par(mfrow=c(2,2))
cleanBikeData<-data.frame(bikeshare$windspeed, bikeshare$humidity, bikeshare$season, bikeshare$weekday, bikeshare$weathersit, round(((bikeshare$atemp*50))*9/5+32, digits = 0), round(((bikeshare$temp*41))*9/5+32, digits = 0), bikeshare$dteday, bikeshare$cnt,bikeshare$casual, bikeshare$registered)
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.windspeed"] <- "windspeed"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.humidity"] <- "humidity"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.season"] <- "season"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.weekday"] <- "weekday"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.weathersit"] <- "weathersit"
names(cleanBikeData)[names(cleanBikeData) == "round...bikeshare.temp...41.....9.5...32..digits...0."] <- "temp"
names(cleanBikeData)[names(cleanBikeData) == "round...bikeshare.atemp...50.....9.5...32..digits...0."] <- "FeelsLike"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.dteday"] <- "date"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.cnt"] <- "cnt"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.casual"] <- "casual"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.registered"] <- "registered"
DayofWeek<-cleanBikeData$weekday
cor.weekday<- cor.test(x = cleanBikeData$weekday,
y = cleanBikeData$cnt)
cor.weekday
cor.casual<- cor.test(x = cleanBikeData$weekday,
y = cleanBikeData$casual)
cor.casual
cor.registered<- cor.test(x = cleanBikeData$season,
y = cleanBikeData$registered)
cor.registered
cor.season<-cor.test(x=cleanBikeData$season, y=cleanBikeData$cnt)
cor.season
cor.seasonCas<-cor.test(x=cleanBikeData$season, y=cleanBikeData$casual)
cor.seasonCas
cor.seasonReg<-cor.test(x=cleanBikeData$season, y=cleanBikeData$registered)
cor.seasonReg
season<-table(cleanBikeData$season)
sp.rentalCnt<-subset(cleanBikeData, season==1)
DayofWeek<-table(cleanBikeData$weekday)
mean.temp<-mean(cleanBikeData$temp)
mean.temp
median.temp<-median(cleanBikeData$temp)
median.temp
mean.atemp<-mean(cleanBikeData$FeelsLike)
mean.atemp
median.atemp<-median(cleanBikeData$FeelsLike)
median.atemp
mean.temp<-mean(cleanBikeData$temp)
mean.temp
median.temp<-median(cleanBikeData$temp)
median.temp
mean.atemp<-mean(cleanBikeData$FeelsLike)
mean.atemp
median.atemp<-median(cleanBikeData$FeelsLike)
median.atemp
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "orange")
reg <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
cas <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
# Plotting the association:
plot(x = 1, y = 1, xlab = "Temperature in Celcius", ylab = "Bike rentals", type = "n", main = "Association between temperature and bike rentals",
xlim = c(0, 40), ylim = c(0, 7000))
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "orange")
reg <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
cas <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(cas, reg) , col = c('orange', 'blue'),pch = c(16, 16), bg = "white")
# Plotting the association:
plot(x = 1, y = 1, xlab = "Temperature in Celcius", ylab = "Bike rentals", type = "n", main = "Association between temperature and bike rentals",
xlim = c(0, 40), ylim = c(0, 7000))
points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "red")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "orange")
reg <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
cas <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(cas, reg) , col = c('orange', 'blue'),pch = c(16, 16), bg = "white")
# Plotting the association:
plot(x = 1, y = 1, xlab = "Temperature in Celcius", ylab = "Bike rentals", type = "n", main = "Association between temperature and bike rentals",
xlim = c(0, 40), ylim = c(0, 7000))
points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "red")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
# Adding a legend to the plot
legend("topleft",legend = c("casual", "registered"), col = c("red","skyblue"), pch = c(16, 16), bg = "white")
# Calculating the correlation between raw.temp and registered users and between raw.temp and causal users
cor.reg <- cor.test(x = day$raw.temp, y = day$registered)
# Plotting the association:
plot(x = 1, y = 1, xlab = "Temperature in Celcius", ylab = "Bike rentals", type = "n", main = "Association between temperature and bike rentals",
xlim = c(0, 40), ylim = c(0, 7000))
points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "red")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
# Adding a legend to the plot
legend("topleft",legend = c("casual", "registered"), col = c("red","skyblue"), pch = c(16, 16), bg = "white")
# Calculating the correlation between raw.temp and registered users and between raw.temp and causal users
cor.reg <- cor.test(x = cleanBikeData$temp, y = cleanBikeData$registered)
cor.reg
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "orange")
reg <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
cas <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(cas, reg) , col = c('orange', 'blue'),pch = c(16, 16), bg = "white")
# Plotting the association:
plot(x = 1, y = 1, xlab = "Temperature in Celcius", ylab = "Bike rentals", type = "n", main = "Association between temperature and bike rentals",
xlim = c(0, 40), ylim = c(0, 7000))
points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "red")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
# Adding a legend to the plot
legend("topleft",legend = c("casual", "registered"), col = c("red","skyblue"), pch = c(16, 16), bg = "white")
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "orange")
reg <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
cas <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(cas, reg) , col = c('orange', 'blue'),pch = c(16, 16), bg = "white")
# Plotting the association:
plot(x = 1, y = 1, xlab = "Temperature in Celcius", ylab = "Bike rentals", type = "n", main = "Association between temperature and bike rentals",
xlim = c(0, 100), ylim = c(0, 10000))
points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "red")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
# Adding a legend to the plot
legend("topleft",legend = c("casual", "registered"), col = c("red","skyblue"), pch = c(16, 16), bg = "white")
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "orange")
reg <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
cas <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(cas, reg) , col = c('orange', 'blue'),pch = c(16, 16), bg = "white")
mean.temp<-mean(cleanBikeData$temp)
mean.temp
median.temp<-median(cleanBikeData$temp)
median.temp
mean.atemp<-mean(cleanBikeData$FeelsLike)
mean.atemp
median.atemp<-median(cleanBikeData$FeelsLike)
median.atemp
# Plotting the association:
plot(x = 1, y = 1, xlab = "Temperature in Celcius", ylab = "Bike rentals", type = "n", main = "Association between temperature and bike rentals",
xlim = c(0, 100), ylim = c(0, 10000))
points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "red")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
# Adding a legend to the plot
legend("topleft",legend = c("casual", "registered"), col = c("red","skyblue"), pch = c(16, 16), bg = "white")
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "orange")
reg <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
cas <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(cas, reg) , col = c('orange', 'blue'),pch = c(16, 16), bg = "white")
# Plotting the association:
plot(x = 1, y = 1, xlab = "Temperature in Celcius", ylab = "Bike rentals", type = "n", main = "Association between temperature and bike rentals",
xlim = c(0, 100), ylim = c(0, 10000))
points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "red")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
# Adding a legend to the plot
legend("topleft",legend = c("casual", "registered"), col = c("red","skyblue"), pch = c(16, 16), bg = "white")
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "black")
reg <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
cas <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(cas, reg) , col = c('black', 'blue'),pch = c(16, 16), bg = "white")
# Plotting the association:
plot(x = 1, y = 1, xlab = "Temperature in Celcius", ylab = "Bike rentals", type = "n", main = "Association between temperature and bike rentals",
xlim = c(0, 100), ylim = c(0, 10000))
points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "pink")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
# Adding a legend to the plot
legend("topleft",legend = c("casual", "registered"), col = c("red","skyblue"), pch = c(16, 16), bg = "white")
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "black")
reg <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
cas <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(cas, reg) , col = c('black', 'blue'),pch = c(16, 16), bg = "white")
# Plotting the association:
plot(x = 1, y = 1, xlab = "Temperature in Celcius", ylab = "Bike rentals", type = "n", main = "Association between temperature and bike rentals",
xlim = c(0, 100), ylim = c(0, 10000))
points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "pink")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
# Adding a legend to the plot
legend("topleft",legend = c("casual", "registered"), col = c("red","skyblue"), pch = c(16, 16), bg = "white")
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "black")
registered <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
casual <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(casual, registered) , col = c('black', 'blue'),pch = c(16, 16), bg = "white")
# Plotting the association:
plot(x = 1, y = 1, xlab = "Temperature in Celcius", ylab = "Bike rentals", type = "n", main = "Association between temperature and bike rentals",
xlim = c(0, 100), ylim = c(0, 10000))
points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "pink")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
# Adding a legend to the plot
legend("topleft",legend = c("casual", "registered"), col = c("red","skyblue"), pch = c(16, 16), bg = "white")
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "black")
registered <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
casual <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(casual, registered) , col = c('black', 'blue'))
# Plotting the association:
plot(x = 1, y = 1, xlab = "Temperature in Celcius", ylab = "Bike rentals", type = "n", main = "Association between temperature and bike rentals",
xlim = c(0, 100), ylim = c(0, 10000))
points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "pink")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
# Adding a legend to the plot
legend("topleft",legend = c("casual", "registered"), col = c("red","skyblue"), pch = c(16, 16), bg = "white")
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "black")
registered <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
casual <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(casual, registered) )
# Plotting the association:
plot(x = 1, y = 1, xlab = "Temperature in Farenheit", ylab = "Bike rentals", type = "n", main = "Association between temperature and bike rentals",
xlim = c(0, 100), ylim = c(0, 10000))
points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "pink")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
# Adding a legend to the plot
legend("topleft",legend = c("casual", "registered"), col = c("red","skyblue"), pch = c(16, 16), bg = "white")
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "black")
registered <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
casual <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(casual, registered) )
# Plotting the association:
plot(x = 1, y = 1, xlab = "Temperature in Farenheit", ylab = "Count of Bike rentals", type = "n", main = "Association between temperature and bike rentals",
xlim = c(0, 100), ylim = c(0, 10000))
points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "pink")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
# Adding a legend to the plot
legend("topleft",legend = c("casual", "registered"), col = c("red","skyblue"), pch = c(16, 16), bg = "white")
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "black")
registered <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
casual <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(casual, registered) )
# Plotting the association:
plot(x = 1, y = 1, xlab = "Temperature in Farenheit", ylab = "Count of Bike rentals", type = "n", main = "Temperature and Bike Rental Types",
xlim = c(0, 100), ylim = c(0, 10000))
points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "pink")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
# Adding a legend to the plot
legend("topleft",legend = c("casual", "registered"), col = c("red","skyblue"), pch = c(16, 16), bg = "white")
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "black")
registered <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
casual <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(casual, registered) )
plot(x = 1, y = 1, xlab = "Temperature in Farenheit"
, ylab = "Count of Bike rentals"
, type = "n"
, main = "Temperature and Bike Rental Types"
,xlim = c(0, 100)
, ylim = c(0, 10000))
points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "pink")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
legend("topleft",legend = c("casual", "registered"), col = c("red","skyblue"), pch = c(16, 16), bg = "white")
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "black")
registered <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
casual <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(casual, registered) )
par(mfrow=c(2,2))
cleanBikeData<-data.frame(bikeshare$windspeed, bikeshare$humidity, bikeshare$season, bikeshare$weekday, bikeshare$weathersit, round(((bikeshare$atemp*50))*9/5+32, digits = 0), round(((bikeshare$temp*41))*9/5+32, digits = 0), bikeshare$dteday, bikeshare$cnt,bikeshare$casual, bikeshare$registered)
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.windspeed"] <- "windspeed"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.humidity"] <- "humidity"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.season"] <- "season"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.weekday"] <- "weekday"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.weathersit"] <- "weathersit"
names(cleanBikeData)[names(cleanBikeData) == "round...bikeshare.temp...41.....9.5...32..digits...0."] <- "temp"
names(cleanBikeData)[names(cleanBikeData) == "round...bikeshare.atemp...50.....9.5...32..digits...0."] <- "FeelsLike"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.dteday"] <- "date"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.cnt"] <- "cnt"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.casual"] <- "casual"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.registered"] <- "registered"
DayofWeek<-cleanBikeData$weekday
cor.registered<- cor.test(x = cleanBikeData$season,
y = cleanBikeData$registered)
cor.registered
cor.season<-cor.test(x=cleanBikeData$season, y=cleanBikeData$cnt)
cor.season
cor.seasonCas<-cor.test(x=cleanBikeData$season, y=cleanBikeData$casual)
cor.seasonCas
cor.seasonReg<-cor.test(x=cleanBikeData$season, y=cleanBikeData$registered)
cor.seasonReg
season<-table(cleanBikeData$season)
sp.rentalCnt<-subset(cleanBikeData, season==1)
DayofWeek<-table(cleanBikeData$weekday)
cor.weekday<- cor.test(x = cleanBikeData$weekday,
y = cleanBikeData$cnt)
cor.weekday
cor.casual<- cor.test(x = cleanBikeData$weekday,
y = cleanBikeData$casual)
cor.casual
a1<-c(16, 16, 16, 16, 16)
a2<-c(15, 16, 16, 16, 16)
summary(a1)
sd(a1)
sd(a2)
sd(20, 25, 25, 25, 30)
2a<-c(20, 25, 25, 25, 30)
a2<-c(20, 25, 25, 25, 30)
b2<-c(15, 25, 25, 25, 35)
sd(a2)
sd(b2)
mean(b2)
hist(b2)
hist(a2)
hist(b2)
a4<-c(10, 20, 30, 40, 50, 60, 70)
b4<-c(10, 20, 30, 40, 40, 50, 60, 70)
sd(a4)
sd(b4)
t<-(0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)
t<-c(0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)
mean(t)
sd(t)
hist(t)
dbinom(4, size=12, prob = 0.2)
dbinom(2, size=20, prob = 0.2)
dbinom(2, size=20, prob = 0.05)
dbinom(2, size=20, prob = 0.1)
dbinom(0, size=20, prob = 0.1)+dbinom(1, size=20, prob = 0.1)+dbinom(2, size=20, prob = 0.1)
dbinom(0, size=20, prob = 0.1)+dbinom(1, size=20, prob = 0.1)
dbinom(1, size=20, prob = 0.1)+dbinom(2, size=20, prob = 0.1)
pbinom(2,size=20,prob = 0.1)
pbinom(2,size=20,prob = 0.1)/2
prob(2/20)
pbinom(2,size=20,prob = 0.5)
t
t<-c(0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0)
dbinom(t)
dbinom(t, size = 2)
pbinom(2,size=20,prob = 0.95)
pbinom(2,size=20,prob = 0.9)
dbinom(0,20,.05)
dbinom(2,20,.05)
dbinom(0,20,.05)
dbinom(1,20,.05)
dbinom(0,20,.05)
dbinom(2,20,.05)
dbinom(1,20,.05)
dbinom(2,20,.1)
1/7
1/6
2/20
2/7
dbinom(2,20,.15)
u=pnorm(2.53, mean = 2.56, .01)
d=pnorm(2.57, mean = 2.56, .01)
u-d
a<-12.2
s<-3
n<-100
error<-qnorm(.975)*s/sqrt(n)
left<-a-error
right<-a+error
left
right
a<-41.93
s<-.1789
n<-20
error<-qnorm(.975)*s/sqrt(n)
left<-a-error
right<-a+error
left
right
-.1+.7*20000
-.1+.7*200000
-.1+(.7*20000)
v<--.1-130000
v/.7
v<--.1-120000
v/.7
v<--.1-140000
v/.7
load("~/Documents/NYU/02_Module/08_DMR/Assignment01/carInsurance.Rdata")
plot(cars)
View(ins)
setwd("~/Documents/NYU/02_Module/08_DMR/Assignment01")
library(DMwR)
library(DMwR)
install.packages("DMwR")
library(DMwR)
head(ins[!complete.cases(ins),],3)
ins
head(ins[!complete.cases(ins),],3)
complete.cases
head(ins[!complete.cases(ins),],3)
nrow(ins[!complete.cases(ins),])
head(ins[!complete.cases(ins),],50)
head(ins[!complete.cases(ins),],3)
noNA.ins <- centralImputation(ins)
View(noNA.ins)
mean(ins$normLoss)
mean(ins$normLoss rm.na=TRUE)
mean(ins$normLoss na.rm=TRUE)
mean(ins$normLoss ,na.rm=TRUE)
median(ins$normLoss ,na.rm=TRUE)
mode(ins$normLoss ,na.rm=TRUE)
mode(ins$normLoss )
summary(ins)
summary(ins$normLoss)
noNA.ins
noNA.ins <- knnImputation(ins,k=10)
noNA.ins
noNA.ins
summary(ins$normLoss)
norm.ins <- ins
for(var in c(10:14,17,19:26)) norm.ins[,var] <- scale(ins[,var])
norm.ins
var
summary(var)
dim(var)
norm.ins
View(norm.ins)
View(ins)
scale(ins[,var]
scale(ins[,var])
norm.ins[,var]
sd(ins$curbWeight)
2548/520.6802
520.6802   /2548
sd(ins$curbWeight)
sd(ins$curbWeight[1])
mean(ins$curbWeight)
2555.566-2548
(2555.566-2548)/520.6802
(2548-2555.566)/520.6802
