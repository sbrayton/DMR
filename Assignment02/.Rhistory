points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "red")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
# Adding a legend to the plot
legend("topleft",legend = c("casual", "registered"), col = c("red","skyblue"), pch = c(16, 16), bg = "white")
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "orange")
reg <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
cas <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(cas, reg) , col = c('orange', 'blue'),pch = c(16, 16), bg = "white")
# Plotting the association:
plot(x = 1, y = 1, xlab = "Temperature in Celcius", ylab = "Bike rentals", type = "n", main = "Association between temperature and bike rentals",
xlim = c(0, 100), ylim = c(0, 10000))
points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "red")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
# Adding a legend to the plot
legend("topleft",legend = c("casual", "registered"), col = c("red","skyblue"), pch = c(16, 16), bg = "white")
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "orange")
reg <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
cas <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(cas, reg) , col = c('orange', 'blue'),pch = c(16, 16), bg = "white")
mean.temp<-mean(cleanBikeData$temp)
mean.temp
median.temp<-median(cleanBikeData$temp)
median.temp
mean.atemp<-mean(cleanBikeData$FeelsLike)
mean.atemp
median.atemp<-median(cleanBikeData$FeelsLike)
median.atemp
# Plotting the association:
plot(x = 1, y = 1, xlab = "Temperature in Celcius", ylab = "Bike rentals", type = "n", main = "Association between temperature and bike rentals",
xlim = c(0, 100), ylim = c(0, 10000))
points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "red")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
# Adding a legend to the plot
legend("topleft",legend = c("casual", "registered"), col = c("red","skyblue"), pch = c(16, 16), bg = "white")
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "orange")
reg <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
cas <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(cas, reg) , col = c('orange', 'blue'),pch = c(16, 16), bg = "white")
# Plotting the association:
plot(x = 1, y = 1, xlab = "Temperature in Celcius", ylab = "Bike rentals", type = "n", main = "Association between temperature and bike rentals",
xlim = c(0, 100), ylim = c(0, 10000))
points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "red")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
# Adding a legend to the plot
legend("topleft",legend = c("casual", "registered"), col = c("red","skyblue"), pch = c(16, 16), bg = "white")
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "black")
reg <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
cas <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(cas, reg) , col = c('black', 'blue'),pch = c(16, 16), bg = "white")
# Plotting the association:
plot(x = 1, y = 1, xlab = "Temperature in Celcius", ylab = "Bike rentals", type = "n", main = "Association between temperature and bike rentals",
xlim = c(0, 100), ylim = c(0, 10000))
points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "pink")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
# Adding a legend to the plot
legend("topleft",legend = c("casual", "registered"), col = c("red","skyblue"), pch = c(16, 16), bg = "white")
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "black")
reg <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
cas <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(cas, reg) , col = c('black', 'blue'),pch = c(16, 16), bg = "white")
# Plotting the association:
plot(x = 1, y = 1, xlab = "Temperature in Celcius", ylab = "Bike rentals", type = "n", main = "Association between temperature and bike rentals",
xlim = c(0, 100), ylim = c(0, 10000))
points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "pink")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
# Adding a legend to the plot
legend("topleft",legend = c("casual", "registered"), col = c("red","skyblue"), pch = c(16, 16), bg = "white")
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "black")
registered <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
casual <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(casual, registered) , col = c('black', 'blue'),pch = c(16, 16), bg = "white")
# Plotting the association:
plot(x = 1, y = 1, xlab = "Temperature in Celcius", ylab = "Bike rentals", type = "n", main = "Association between temperature and bike rentals",
xlim = c(0, 100), ylim = c(0, 10000))
points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "pink")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
# Adding a legend to the plot
legend("topleft",legend = c("casual", "registered"), col = c("red","skyblue"), pch = c(16, 16), bg = "white")
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "black")
registered <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
casual <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(casual, registered) , col = c('black', 'blue'))
# Plotting the association:
plot(x = 1, y = 1, xlab = "Temperature in Celcius", ylab = "Bike rentals", type = "n", main = "Association between temperature and bike rentals",
xlim = c(0, 100), ylim = c(0, 10000))
points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "pink")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
# Adding a legend to the plot
legend("topleft",legend = c("casual", "registered"), col = c("red","skyblue"), pch = c(16, 16), bg = "white")
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "black")
registered <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
casual <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(casual, registered) )
# Plotting the association:
plot(x = 1, y = 1, xlab = "Temperature in Farenheit", ylab = "Bike rentals", type = "n", main = "Association between temperature and bike rentals",
xlim = c(0, 100), ylim = c(0, 10000))
points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "pink")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
# Adding a legend to the plot
legend("topleft",legend = c("casual", "registered"), col = c("red","skyblue"), pch = c(16, 16), bg = "white")
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "black")
registered <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
casual <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(casual, registered) )
# Plotting the association:
plot(x = 1, y = 1, xlab = "Temperature in Farenheit", ylab = "Count of Bike rentals", type = "n", main = "Association between temperature and bike rentals",
xlim = c(0, 100), ylim = c(0, 10000))
points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "pink")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
# Adding a legend to the plot
legend("topleft",legend = c("casual", "registered"), col = c("red","skyblue"), pch = c(16, 16), bg = "white")
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "black")
registered <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
casual <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(casual, registered) )
# Plotting the association:
plot(x = 1, y = 1, xlab = "Temperature in Farenheit", ylab = "Count of Bike rentals", type = "n", main = "Temperature and Bike Rental Types",
xlim = c(0, 100), ylim = c(0, 10000))
points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "pink")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
# Adding a legend to the plot
legend("topleft",legend = c("casual", "registered"), col = c("red","skyblue"), pch = c(16, 16), bg = "white")
# Adding Correlation line and the correlation value to the plot
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "black")
registered <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
casual <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(casual, registered) )
plot(x = 1, y = 1, xlab = "Temperature in Farenheit"
, ylab = "Count of Bike rentals"
, type = "n"
, main = "Temperature and Bike Rental Types"
,xlim = c(0, 100)
, ylim = c(0, 10000))
points(cleanBikeData$temp, cleanBikeData$casual, pch = 16, col = "pink")
points(cleanBikeData$temp, cleanBikeData$registered, pch = 16, col = "skyblue")
legend("topleft",legend = c("casual", "registered"), col = c("red","skyblue"), pch = c(16, 16), bg = "white")
abline(lm(cleanBikeData$registered ~ cleanBikeData$temp), lty = 6, col = "blue")
abline(lm(cleanBikeData$casual ~ cleanBikeData$temp), lty = 6, col = "black")
registered <- paste("cor = ", round(cor(cleanBikeData$registered, cleanBikeData$temp), 2), sep = "")
casual <- paste("cor = ", round(cor(cleanBikeData$casual, cleanBikeData$temp), 2), sep = "")
legend("left",legend = c(casual, registered) )
par(mfrow=c(2,2))
cleanBikeData<-data.frame(bikeshare$windspeed, bikeshare$humidity, bikeshare$season, bikeshare$weekday, bikeshare$weathersit, round(((bikeshare$atemp*50))*9/5+32, digits = 0), round(((bikeshare$temp*41))*9/5+32, digits = 0), bikeshare$dteday, bikeshare$cnt,bikeshare$casual, bikeshare$registered)
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.windspeed"] <- "windspeed"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.humidity"] <- "humidity"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.season"] <- "season"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.weekday"] <- "weekday"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.weathersit"] <- "weathersit"
names(cleanBikeData)[names(cleanBikeData) == "round...bikeshare.temp...41.....9.5...32..digits...0."] <- "temp"
names(cleanBikeData)[names(cleanBikeData) == "round...bikeshare.atemp...50.....9.5...32..digits...0."] <- "FeelsLike"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.dteday"] <- "date"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.cnt"] <- "cnt"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.casual"] <- "casual"
names(cleanBikeData)[names(cleanBikeData) == "bikeshare.registered"] <- "registered"
DayofWeek<-cleanBikeData$weekday
cor.registered<- cor.test(x = cleanBikeData$season,
y = cleanBikeData$registered)
cor.registered
cor.season<-cor.test(x=cleanBikeData$season, y=cleanBikeData$cnt)
cor.season
cor.seasonCas<-cor.test(x=cleanBikeData$season, y=cleanBikeData$casual)
cor.seasonCas
cor.seasonReg<-cor.test(x=cleanBikeData$season, y=cleanBikeData$registered)
cor.seasonReg
season<-table(cleanBikeData$season)
sp.rentalCnt<-subset(cleanBikeData, season==1)
DayofWeek<-table(cleanBikeData$weekday)
cor.weekday<- cor.test(x = cleanBikeData$weekday,
y = cleanBikeData$cnt)
cor.weekday
cor.casual<- cor.test(x = cleanBikeData$weekday,
y = cleanBikeData$casual)
cor.casual
a1<-c(16, 16, 16, 16, 16)
a2<-c(15, 16, 16, 16, 16)
summary(a1)
sd(a1)
sd(a2)
sd(20, 25, 25, 25, 30)
2a<-c(20, 25, 25, 25, 30)
a2<-c(20, 25, 25, 25, 30)
b2<-c(15, 25, 25, 25, 35)
sd(a2)
sd(b2)
mean(b2)
hist(b2)
hist(a2)
hist(b2)
a4<-c(10, 20, 30, 40, 50, 60, 70)
b4<-c(10, 20, 30, 40, 40, 50, 60, 70)
sd(a4)
sd(b4)
t<-(0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)
t<-c(0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)
mean(t)
sd(t)
hist(t)
dbinom(4, size=12, prob = 0.2)
dbinom(2, size=20, prob = 0.2)
dbinom(2, size=20, prob = 0.05)
dbinom(2, size=20, prob = 0.1)
dbinom(0, size=20, prob = 0.1)+dbinom(1, size=20, prob = 0.1)+dbinom(2, size=20, prob = 0.1)
dbinom(0, size=20, prob = 0.1)+dbinom(1, size=20, prob = 0.1)
dbinom(1, size=20, prob = 0.1)+dbinom(2, size=20, prob = 0.1)
pbinom(2,size=20,prob = 0.1)
pbinom(2,size=20,prob = 0.1)/2
prob(2/20)
pbinom(2,size=20,prob = 0.5)
t
t<-c(0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0)
dbinom(t)
dbinom(t, size = 2)
pbinom(2,size=20,prob = 0.95)
pbinom(2,size=20,prob = 0.9)
dbinom(0,20,.05)
dbinom(2,20,.05)
dbinom(0,20,.05)
dbinom(1,20,.05)
dbinom(0,20,.05)
dbinom(2,20,.05)
dbinom(1,20,.05)
dbinom(2,20,.1)
1/7
1/6
2/20
2/7
dbinom(2,20,.15)
u=pnorm(2.53, mean = 2.56, .01)
d=pnorm(2.57, mean = 2.56, .01)
u-d
a<-12.2
s<-3
n<-100
error<-qnorm(.975)*s/sqrt(n)
left<-a-error
right<-a+error
left
right
a<-41.93
s<-.1789
n<-20
error<-qnorm(.975)*s/sqrt(n)
left<-a-error
right<-a+error
left
right
-.1+.7*20000
-.1+.7*200000
-.1+(.7*20000)
v<--.1-130000
v/.7
v<--.1-120000
v/.7
v<--.1-140000
v/.7
install.packages("MASS")
data(Boston, package="MASS")
data(Boston, package="MASS")
Boston$age <- cut(Boston$age,4)
View(Boston)
data(Boston, package="MASS")
Boston$age
View(Boston)
data(Boston, package="MASS")
View(Boston)
Boston$age <- cut(Boston$age,4)
table(Boston$age)
data(Boston, package="MASS")
Boston$age <- cut(Boston$age,10)
table(Boston$age)
Boston$age <- cut(Boston$age,4)
data(Boston, package="MASS")
Boston$age2 <- cut(Boston$age,4)
table(Boston$age2)
Boston$age3 <- cut(Boston$age,quantile(Boston$age,probs=seq(0,1,.25)))
table(Boston$age3)
?
quantile
boxplot(Boston$age)
hist(Boston$age)
boxplot(Boston$age)
quantile(Boston$age, probs = c(0.05, 0.95))
quantile(Boston$age,probs=seq(0, 1, .25))
library(e1071)
setwd("~/DropBox/NYU/02_Module/08_DMR/Assignment02")
render("sb6000_assignment02.Rmd")
render("sb6000_assignment02.Rmd")
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
render("sb6000_assignment02.Rmd")
render("sb6000_assignment02.Rmd")
plot(cars)
install.packages(RMySQL)
install.packages('RMySQL')
setwd("~/DropBox/NYU/02_Module/08_DMR/Assignment02")
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
render("sb6000_assignment02.Rmd")
setwd("~/DropBox/NYU/02_Module/08_DMR/Assignment02")
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
render("sb6000_assignment02.Rmd")
setwd("~/DropBox/NYU/02_Module/08_DMR/Assignment02")
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages('RMySQL')
install.packages('DNwR2')
install.packages("DMwR2")
library(DMwR2)
installed.packages()
setwd("~/DropBox/NYU/02_Module/08_DMR/Assignment02")
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages('RMySQL')
install.packages('DMwR2')
library(DMwR2)
library(data.table)
mydat <- fread('https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/breast-cancer-wisconsin.data')
head(mydat)
install.packages("DMwR2")
View(mydat)
setwd("~/DropBox/NYU/02_Module/08_DMR/Assignment02")
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages('RMySQL')
install.packages('DMwR2')
library(DMwR2)
head(mydat)
names(mydat) <- c("patientID", "clump_thicknes","uniformity_cell_size","uniformity_cell_shape","marginal_adhesion","single_eipthelial","bare_nuclei","bland_chromatin","normal_nucleoli","mitoses","class")
head(mydat)
setwd("~/DropBox/NYU/02_Module/08_DMR/Assignment02")
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages('RMySQL')
install.packages('DMwR2')
library(DMwR2)
install.packages("DMwR2")
nrow(mydat)
nrow(mydat)
setwd("~/DropBox/NYU/02_Module/08_DMR/Assignment02")
# library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
# install.packages('RMySQL')
# install.packages('DMwR2')
# library(DMwR2)
library(data.table)
mydat <- fread('https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/breast-cancer-wisconsin.data')
names(mydat) <- c("patientID", "clump_thicknes","uniformity_cell_size","uniformity_cell_shape","marginal_adhesion","single_eipthelial","bare_nuclei","bland_chromatin","normal_nucleoli","mitoses","class")
library(tidyr)
gather
mydatL<-gather(mydat, "patientID", "clump_thicknes","uniformity_cell_size","uniformity_cell_shape","marginal_adhesion","single_eipthelial","bare_nuclei","bland_chromatin","normal_nucleoli","mitoses","class")
d <- readLines(url("https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/breast-cancer-wisconsin.data")
d <- readLines(url("https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/breast-cancer-wisconsin.data")
library("stringi")
d <- readLines(url("https://archive.ics.uci.edu/ml/machine-learning-databases/heart-disease/heart-disease.names")
d <- readLines(url("https://archive.ics.uci.edu/ml/machine-learning-databases/heart-disease/heart-disease.names"))
d <- readLines(url("https://archive.ics.uci.edu/ml/machine-learning-databases/heart-disease/heart-disease.names"))
d
d <- d[127:235]
head(d,2)
tail(d,2)
stri_trim(d)
t<- readLines(url("https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/breast-cancer-wisconsin.names"))
t
t<- t[106:116]
t
stri_trim(t)
t
d[grep("^26",d)]
d
d[grep("^26",d)]
d[grep("^26",d)]
d[grep("^1",d)]
d[grep("26",d)]
d[grep("1",d)]
d[grep("1",d)]
d <- d[127:235]
d[grep("31",d)]
d[grep("26",d)]
d
d <- d[127:235]
d[grep("26",d)]
d
d <- readLines(url("https://archive.ics.uci.edu/ml/machine-learning-databases/heart-disease/heart-disease.names"))
d <- d[127:235]
head(d,2)
tail(d,2)
stri_trim(d)
d[grep("1",d)]
d[grep("31",d)]
d[grep("^1",d)]
d[grep("11",d)]
d[grep("[1]",d)]
d[grep("[1] ",d)]
d[grep(" [1] ",d)]
d[grep("   [1] ",d)]
tgtLines <- sapply(1:76,function(i) d[grep(paste0("^",i),d)[1]]) head(tgtLines,2)
tgtLines <- sapply(1:76,function(i) d[grep(paste0("^",i),d)[1]]) head(tgtLines,2)
tgtLines <- sapply(1:76,function(i) d[grep(paste0("^",i),d)[1]]) head(tgtLines,2))
tgtLines <- sapply(1:76,function(i) d[grep(paste0("^",i),d)[1]])
head(tgtLines,2)
d <- d[127:235]
head(d,2)
tail(d,2)
d <- readLines(url("https://archive.ics.uci.edu/ml/machine-learning-databases/heart-disease/heart-disease.names"))
d <- d[127:235]
head(d,2)
tail(d,2)
stri_trim(d)
tgtLines <- sapply(1:76,function(i) d[grep(paste0("^",i),d)[1]])
head(tgtLines,2)
d
tgtLines <- sapply(1:76,function(i) d[grep(paste0("",i),d)[1]])
head(tgtLines,2)
d[grep("   [1] ",d)]
d[grep("[1] ",d)]
d[grep("^[1] ",d)]
d[grep("[^1] ",d)]
d[grep("[^1] ",d)]
d[grep("^[1] ",d)]
d[grep("[1] ",d)]
d[grep("?[1] ",d)]
d[grep("-[1] ",d)]
d[grep("[^1] ",d)]
d[grep("[^...1] ",d)]
d[grep("^1",d)]
d[grep("^    1",d)]
d[grep("^...1",d)]
d[grep(" ",d)]
d[grep("26",d)]
t
x<-t[grep(".",t)]
x
x<-t[grep(".",t[1])]
x
x
x<-t[grep("[ ].",t[1])]
x<-t[grep(".[ ]",t[1])]
t[grep("[ ]",t[1])]
x<-strsplit(x, " ")[[1]]
x
x[5]
x<-strsplit(x, " ")[[2]]
x<-strsplit(t, " ")[[2]]
x[5]
tgtLines <- sapply(1:76,function(i) d[grep(paste0("^",i),d)[1]])
sapply
tgtLines <- sapply(1:76,function(i) print(i))
tgtLines <- sapply(1:76,function(i) print(i))
d[grep(paste0("^",d[1]),d)[1]]
d[grep(paste0("^",d[i]),d)[1]]
d[grep(paste0("^",i),d)[1]]
i<-10
d[grep(paste0("^",d[i]),d)[1]]
i<-2
d[grep(paste0("^",d[i]),d)[1]]
i<-3
d[grep(paste0("^",d[i]),d)[1]]
d
i<-3
d[grep(paste0("^",i),d)[1]]
i<-3
d[grep(paste0("^",d[i]),d)[1]]
i<-3
d[3]
d[grep(paste0("^",d[i]),d)[1]]
i<-3
d[i]
d[grep(paste0("^",d[i]),d)[1]]
i<-10
d[i]
d[grep(paste0("^",d[i]),d)[1]]
sapply(1:76,function(i) d[grep(paste0("^",i),d)[1]])
sapply(1:76,function(i) d[grep(paste0("^",d[i]),d)[1]])
tgtLines <- sapply(1:76,function(i) print(i))
tgtLines <- sapply(1:76,function(i) print(d[i]))
tgtLines <- sapply(1:76,function(i) print(d[i:5]))
t[grep("[ ]",t[1])]
sapply(1:76,function(i) d[grep(paste0("^",i),d)[1]])
sapply(1:76,function(i) d[grep(paste0("^",i),d)[i]])
sapply(1:76,function(i) d[grep(paste0("^",i),d) [i]] )
stri_trim(t)
x[5]
t<-stri_trim(t)
t
t[1]
x<-strsplit(t[1], " ")
x
x[1]
x[2]
x<-strsplit(t, " ")
x
x<-strsplit(t, " ")
x[1:2]
x<-strsplit(t[1], " ")
x[1:2]
x[:2]
x[0:2]
x[[1:2]]
