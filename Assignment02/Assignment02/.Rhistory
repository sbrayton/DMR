multi.hist(noNA.mydat[2:10], bcol = "pink")
setwd("~/DropBox/NYU/02_Module/08_DMR/Assignment02")
# library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
# install.packages('RMySQL')
# install.packages('DMwR2')
library(DMwR2)
library(plyr)
library(ggplot2)
library(reshape2)
library(corrplot)
library(caret)
library(psych)
library(tidyverse)
#Here we will use knitr to produce a html friendly table to display the top 3 rows of na data examples.
library(knitr)
library(data.table)
# install.packages("corrplot")
library("corrplot")
setwd("~/DropBox/NYU/02_Module/08_DMR/Assignment02")
#Pul the data straight from the online site
mydat <- fread('https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/breast-cancer-wisconsin.data')
#Alter column names of dataframe to match the data dictionary that was found online
names(mydat) <- c("patientID", "clump_thicknes","uniformity_cell_size","uniformity_cell_shape","marginal_adhesion","single_eipthelial","bare_nuclei","bland_chromatin","normal_nucleoli","mitoses","class")
# {r echo=FALSE, fig.align='center'}
library("stringr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
con <- url("https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/breast-cancer-wisconsin.names")
colTitles<- readLines(con)
close(con)
colTitles<- colTitles[106:116]
splTitles<-gsub('1 - 10+', '', colTitles)
headers<-c()
#scrub out the extra spaces from the data
for(title in splTitles)
{
splString <- as.data.frame(strsplit(title,  "\t"), row.names = NULL, optional = FALSE)
splString <- as.character( splString[!(splString==""),])
splString<-str_trim(splString)
splString<- lapply(splString, function(x){gsub(" ", "_",splString)})
splString<- lapply(splString, function(x){gsub("___________", "",splString)})
splString<- lapply(splString, function(x){gsub("__________", "",splString)})
splString<- lapply(splString, function(x){gsub("_________", "",splString)})
splString<- lapply(splString, function(x){gsub("________", "",splString)})
splString<- lapply(splString, function(x){gsub("_______", "",splString)})
splString<- lapply(splString, function(x){gsub("______", "",splString)})
splString<- lapply(splString, function(x){gsub("_____", "",splString)})
splString<- lapply(splString, function(x){gsub("___", "",splString)})
splString<- lapply(splString, function(x){gsub("__", "",splString)})
splString<- lapply(splString, function(x){gsub("_", " ",splString)})
headers<-append(headers, splString[[1]])
}
Data_Features<-as.data.frame(headers)
names(Data_Features)<-c("Data Featrues")
kable(Data_Features, caption = NULL,format = "html")
library(readr)
# Replace an ? marks found in the data with 'NA' so to later use R functions/packages to clean them up.
na.mydat <- parse_integer(mydat$bare_nuclei,na="?")
#Once question marks are transformed to 'NA', add the vector back to the data frame
mydat$bare_nuclei<-na.mydat
noNA.mydat <- centralImputation(mydat)
kable( head(mydat[!complete.cases(mydat),],3), caption = 'Top 3 Rows with Missing Data')
#Filter cleansed data table with the same rows.
t<-head(mydat[!complete.cases(mydat),],3)
pIDvector <-t$patientID
kable( noNA.mydat[noNA.mydat$patientID %in% pIDvector, ], caption = 'Same 3 rows, with NA\'s cleansed')
r<- as.data.frame(sapply(noNA.mydat, class))
names(r)<-c("Data Type")
kable(r, align = 'l',format = "html")
rw <- describe(noNA.mydat, IQR=TRUE)
rw
multi.hist(noNA.mydat[2:10], bcol = "pink")
l <- cor(noNA.mydat[,3:11])
corrplot(l, method = "circle")
# Looking at only malignant datapoints
mydat4<-subset(noNA.mydat, noNA.mydat$class == 4)
# Looking at only benign datapoints
mydat2<-subset(noNA.mydat, noNA.mydat$class == 2)
# Means of malignant columns
mydat4_mean<-colMeans(subset(mydat4, select = c(marginal_adhesion, clump_thicknes, uniformity_cell_size, uniformity_cell_shape, single_eipthelial, bare_nuclei, bland_chromatin, normal_nucleoli, mitoses)))
# Means of benign columns
mydat2_mean<-colMeans(subset(mydat2, select = c(marginal_adhesion, clump_thicknes, uniformity_cell_size, uniformity_cell_shape, single_eipthelial, bare_nuclei, bland_chromatin, normal_nucleoli, mitoses)))
# Plot means of malignant columns vs means of benign columns
# Merge benign and malignant mean tables
total<- merge(mydat4_mean, mydat2_mean, by="row.names")
names(total) <- c("Attributes","Malignant", "Benign")
# Use Melt to transform
df1 <- melt(total,"Attributes")
#df1$Attributes to factor variabls
df1$Attributes<-as.factor(df1$Attributes)
# GGplot
plot <- ggplot(df1, aes(x = Attributes, y=value)) + ggtitle("Benign vs Malignant")+ geom_bar(aes(fill=variable),stat="identity", position ="dodge") +  theme(axis.text.x = element_text(angle=-40, hjust=.1)) +scale_fill_manual(name="Cancer Class",values = c("darkblue","pink"))
plot
B<-table(mydat$class)
names(B) <- c("Benign","Malignant")
barplot(as.matrix(B), main='Benign vs. Malignant Cases', ylab = 'Count of Cases', beside = TRUE,col = c("Pink","darkblue"), legend = rownames(B), ylim = c(0, round_any(nrow(mydat)+50,10)))
# Logistic Regression on all variables on class to view significance of each variable
model_all <- glm(as.factor(noNA.mydat$class) ~ marginal_adhesion + clump_thicknes
+ uniformity_cell_size+uniformity_cell_shape+single_eipthelial+bare_nuclei+bland_chromatin+normal_nucleoli+mitoses
, data=noNA.mydat, family = binomial )
summary(model_all)
#Drill down based on significance
model_sig<-glm(as.factor(noNA.mydat$class) ~ marginal_adhesion+clump_thicknes+uniformity_cell_size+uniformity_cell_shape+bare_nuclei+bland_chromatin+normal_nucleoli, data=noNA.mydat, family = binomial )
# summary(model_sig)
# Logistic Regression of Marginal Adhesion on Class
model_ma<-glm(as.factor(class)~marginal_adhesion, data=noNA.mydat,family = binomial )
xmarginal_adhesion <- seq(0, 10, 0.01)
ymarginal_adhesion <-  predict(model_ma, list(marginal_adhesion = xmarginal_adhesion),type="response")
plot(noNA.mydat$marginal_adhesion, noNA.mydat$class, pch = 10, xlab = "Marginal Adhesion", ylab = "Class", main="Marginal Adhesion Based on Class")
lines(xmarginal_adhesion, ymarginal_adhesion)
noNA.mydat$class[noNA.mydat$class == 2] <- "Benign"
noNA.mydat$class[noNA.mydat$class == '4'] <- "Malignant"
#df1$Attributes to factor variabls
noNA.mydat$class<-as.factor(noNA.mydat$class)
#
# library(ggplot2)
plot <- ggplot(data=noNA.mydat, aes(x=noNA.mydat$clump_thicknes, y=noNA.mydat$marginal_adhesion, col=noNA.mydat$class)) + ggtitle("Marginal adhesions vs Clump Thickness")+  theme(plot.title = element_text(family = "Trebuchet MS", color="darkblue", face="bold", size=18, hjust=0, posi))
plot <- plot + geom_point(aes(shape=noNA.mydat$class,size=.1,alpha= .1)) + scale_color_manual(name="Cancer Class",values=c("darkblue", "red"))+ scale_alpha(guide = 'none')
plot <- plot + xlab("Clump Thickness") + ylab("Marginal Adhesion")
plot
library(ggplot2)
plot <- ggplot(data=noNA.mydat, aes(x=noNA.mydat$clump_thicknes, y=noNA.mydat$mitoses, col=noNA.mydat$class)) + ggtitle("Marginal adhesions vs Mitosi") + theme(plot.title = element_text(family = "Trebuchet MS", color="darkblue", face="bold", size=18, hjust=0))+scale_fill_gradient(low="green",high="darkred")
plot <- plot + geom_point(aes(shape=noNA.mydat$class,size=.1,alpha= .8)) + scale_color_manual(name="Cancer Class",values=c("darkblue", "red"))+ scale_alpha(guide = 'none')
plot <- plot + xlab("Clump Thickness") + ylab("Mitosis")
plot
noNA.mydat2 <- as.data.frame(noNA.mydat)
multi.hist(noNA.mydat[2:10], bcol = "pink")
noNA.mydat[2:10]
noNA.mydat[2:9]
noNA.mydat2 <- as.data.frame(noNA.mydat[2:9])
multi.hist(noNA.mydat[2:9], bcol = "pink")
setwd("~/DropBox/NYU/02_Module/08_DMR/Assignment02")
# library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
# install.packages('RMySQL')
# install.packages('DMwR2')
library(DMwR2)
library(plyr)
library(ggplot2)
library(reshape2)
library(corrplot)
library(caret)
library(psych)
library(tidyverse)
#Here we will use knitr to produce a html friendly table to display the top 3 rows of na data examples.
library(knitr)
library(data.table)
# install.packages("corrplot")
library("corrplot")
setwd("~/DropBox/NYU/02_Module/08_DMR/Assignment02")
#Pul the data straight from the online site
mydat <- fread('https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/breast-cancer-wisconsin.data')
#Alter column names of dataframe to match the data dictionary that was found online
names(mydat) <- c("patientID", "clump_thicknes","uniformity_cell_size","uniformity_cell_shape","marginal_adhesion","single_eipthelial","bare_nuclei","bland_chromatin","normal_nucleoli","mitoses","class")
# {r echo=FALSE, fig.align='center'}
library("stringr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
con <- url("https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/breast-cancer-wisconsin.names")
colTitles<- readLines(con)
close(con)
colTitles<- colTitles[106:116]
splTitles<-gsub('1 - 10+', '', colTitles)
headers<-c()
#scrub out the extra spaces from the data
for(title in splTitles)
{
splString <- as.data.frame(strsplit(title,  "\t"), row.names = NULL, optional = FALSE)
splString <- as.character( splString[!(splString==""),])
splString<-str_trim(splString)
splString<- lapply(splString, function(x){gsub(" ", "_",splString)})
splString<- lapply(splString, function(x){gsub("___________", "",splString)})
splString<- lapply(splString, function(x){gsub("__________", "",splString)})
splString<- lapply(splString, function(x){gsub("_________", "",splString)})
splString<- lapply(splString, function(x){gsub("________", "",splString)})
splString<- lapply(splString, function(x){gsub("_______", "",splString)})
splString<- lapply(splString, function(x){gsub("______", "",splString)})
splString<- lapply(splString, function(x){gsub("_____", "",splString)})
splString<- lapply(splString, function(x){gsub("___", "",splString)})
splString<- lapply(splString, function(x){gsub("__", "",splString)})
splString<- lapply(splString, function(x){gsub("_", " ",splString)})
headers<-append(headers, splString[[1]])
}
Data_Features<-as.data.frame(headers)
names(Data_Features)<-c("Data Featrues")
kable(Data_Features, caption = NULL,format = "html")
library(readr)
# Replace an ? marks found in the data with 'NA' so to later use R functions/packages to clean them up.
na.mydat <- parse_integer(mydat$bare_nuclei,na="?")
#Once question marks are transformed to 'NA', add the vector back to the data frame
mydat$bare_nuclei<-na.mydat
noNA.mydat <- centralImputation(mydat)
kable( head(mydat[!complete.cases(mydat),],3), caption = 'Top 3 Rows with Missing Data')
#Filter cleansed data table with the same rows.
t<-head(mydat[!complete.cases(mydat),],3)
pIDvector <-t$patientID
kable( noNA.mydat[noNA.mydat$patientID %in% pIDvector, ], caption = 'Same 3 rows, with NA\'s cleansed')
r<- as.data.frame(sapply(noNA.mydat, class))
names(r)<-c("Data Type")
kable(r, align = 'l',format = "html")
rw <- describe(noNA.mydat, IQR=TRUE)
rw
multi.hist(noNA.mydat, bcol = "pink")
l <- cor(noNA.mydat[,3:11])
corrplot(l, method = "circle")
# Looking at only malignant datapoints
mydat4<-subset(noNA.mydat, noNA.mydat$class == 4)
# Looking at only benign datapoints
mydat2<-subset(noNA.mydat, noNA.mydat$class == 2)
# Means of malignant columns
mydat4_mean<-colMeans(subset(mydat4, select = c(marginal_adhesion, clump_thicknes, uniformity_cell_size, uniformity_cell_shape, single_eipthelial, bare_nuclei, bland_chromatin, normal_nucleoli, mitoses)))
# Means of benign columns
mydat2_mean<-colMeans(subset(mydat2, select = c(marginal_adhesion, clump_thicknes, uniformity_cell_size, uniformity_cell_shape, single_eipthelial, bare_nuclei, bland_chromatin, normal_nucleoli, mitoses)))
# Plot means of malignant columns vs means of benign columns
# Merge benign and malignant mean tables
total<- merge(mydat4_mean, mydat2_mean, by="row.names")
names(total) <- c("Attributes","Malignant", "Benign")
# Use Melt to transform
df1 <- melt(total,"Attributes")
#df1$Attributes to factor variabls
df1$Attributes<-as.factor(df1$Attributes)
# GGplot
plot <- ggplot(df1, aes(x = Attributes, y=value)) + ggtitle("Benign vs Malignant")+ geom_bar(aes(fill=variable),stat="identity", position ="dodge") +  theme(axis.text.x = element_text(angle=-40, hjust=.1)) +scale_fill_manual(name="Cancer Class",values = c("darkblue","pink"))
plot
B<-table(mydat$class)
names(B) <- c("Benign","Malignant")
barplot(as.matrix(B), main='Benign vs. Malignant Cases', ylab = 'Count of Cases', beside = TRUE,col = c("Pink","darkblue"), legend = rownames(B), ylim = c(0, round_any(nrow(mydat)+50,10)))
# Logistic Regression on all variables on class to view significance of each variable
model_all <- glm(as.factor(noNA.mydat$class) ~ marginal_adhesion + clump_thicknes
+ uniformity_cell_size+uniformity_cell_shape+single_eipthelial+bare_nuclei+bland_chromatin+normal_nucleoli+mitoses
, data=noNA.mydat, family = binomial )
summary(model_all)
#Drill down based on significance
model_sig<-glm(as.factor(noNA.mydat$class) ~ marginal_adhesion+clump_thicknes+uniformity_cell_size+uniformity_cell_shape+bare_nuclei+bland_chromatin+normal_nucleoli, data=noNA.mydat, family = binomial )
# summary(model_sig)
# Logistic Regression of Marginal Adhesion on Class
model_ma<-glm(as.factor(class)~marginal_adhesion, data=noNA.mydat,family = binomial )
xmarginal_adhesion <- seq(0, 10, 0.01)
ymarginal_adhesion <-  predict(model_ma, list(marginal_adhesion = xmarginal_adhesion),type="response")
plot(noNA.mydat$marginal_adhesion, noNA.mydat$class, pch = 10, xlab = "Marginal Adhesion", ylab = "Class", main="Marginal Adhesion Based on Class")
lines(xmarginal_adhesion, ymarginal_adhesion)
noNA.mydat$class[noNA.mydat$class == 2] <- "Benign"
noNA.mydat$class[noNA.mydat$class == '4'] <- "Malignant"
#df1$Attributes to factor variabls
noNA.mydat$class<-as.factor(noNA.mydat$class)
#
# library(ggplot2)
plot <- ggplot(data=noNA.mydat, aes(x=noNA.mydat$clump_thicknes, y=noNA.mydat$marginal_adhesion, col=noNA.mydat$class)) + ggtitle("Marginal adhesions vs Clump Thickness")+  theme(plot.title = element_text(family = "Trebuchet MS", color="darkblue", face="bold", size=18, hjust=0, posi))
plot <- plot + geom_point(aes(shape=noNA.mydat$class,size=.1,alpha= .1)) + scale_color_manual(name="Cancer Class",values=c("darkblue", "red"))+ scale_alpha(guide = 'none')
plot <- plot + xlab("Clump Thickness") + ylab("Marginal Adhesion")
plot
library(ggplot2)
plot <- ggplot(data=noNA.mydat, aes(x=noNA.mydat$clump_thicknes, y=noNA.mydat$mitoses, col=noNA.mydat$class)) + ggtitle("Marginal adhesions vs Mitosi") + theme(plot.title = element_text(family = "Trebuchet MS", color="darkblue", face="bold", size=18, hjust=0))+scale_fill_gradient(low="green",high="darkred")
plot <- plot + geom_point(aes(shape=noNA.mydat$class,size=.1,alpha= .8)) + scale_color_manual(name="Cancer Class",values=c("darkblue", "red"))+ scale_alpha(guide = 'none')
plot <- plot + xlab("Clump Thickness") + ylab("Mitosis")
plot
setwd("~/DropBox/NYU/02_Module/08_DMR/Assignment02")
# library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
# install.packages('RMySQL')
# install.packages('DMwR2')
library(DMwR2)
library(plyr)
library(ggplot2)
library(reshape2)
library(corrplot)
library(caret)
library(psych)
library(tidyverse)
#Here we will use knitr to produce a html friendly table to display the top 3 rows of na data examples.
library(knitr)
library(data.table)
# install.packages("corrplot")
library("corrplot")
setwd("~/DropBox/NYU/02_Module/08_DMR/Assignment02")
#Pul the data straight from the online site
mydat <- fread('https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/breast-cancer-wisconsin.data')
#Alter column names of dataframe to match the data dictionary that was found online
names(mydat) <- c("patientID", "clump_thicknes","uniformity_cell_size","uniformity_cell_shape","marginal_adhesion","single_eipthelial","bare_nuclei","bland_chromatin","normal_nucleoli","mitoses","class")
# {r echo=FALSE, fig.align='center'}
library("stringr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
con <- url("https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/breast-cancer-wisconsin.names")
colTitles<- readLines(con)
close(con)
colTitles<- colTitles[106:116]
splTitles<-gsub('1 - 10+', '', colTitles)
headers<-c()
#scrub out the extra spaces from the data
for(title in splTitles)
{
splString <- as.data.frame(strsplit(title,  "\t"), row.names = NULL, optional = FALSE)
splString <- as.character( splString[!(splString==""),])
splString<-str_trim(splString)
splString<- lapply(splString, function(x){gsub(" ", "_",splString)})
splString<- lapply(splString, function(x){gsub("___________", "",splString)})
splString<- lapply(splString, function(x){gsub("__________", "",splString)})
splString<- lapply(splString, function(x){gsub("_________", "",splString)})
splString<- lapply(splString, function(x){gsub("________", "",splString)})
splString<- lapply(splString, function(x){gsub("_______", "",splString)})
splString<- lapply(splString, function(x){gsub("______", "",splString)})
splString<- lapply(splString, function(x){gsub("_____", "",splString)})
splString<- lapply(splString, function(x){gsub("___", "",splString)})
splString<- lapply(splString, function(x){gsub("__", "",splString)})
splString<- lapply(splString, function(x){gsub("_", " ",splString)})
headers<-append(headers, splString[[1]])
}
Data_Features<-as.data.frame(headers)
names(Data_Features)<-c("Data Featrues")
kable(Data_Features, caption = NULL,format = "html")
library(readr)
# Replace an ? marks found in the data with 'NA' so to later use R functions/packages to clean them up.
na.mydat <- parse_integer(mydat$bare_nuclei,na="?")
#Once question marks are transformed to 'NA', add the vector back to the data frame
mydat$bare_nuclei<-na.mydat
noNA.mydat <- centralImputation(mydat)
kable( head(mydat[!complete.cases(mydat),],3), caption = 'Top 3 Rows with Missing Data')
#Filter cleansed data table with the same rows.
t<-head(mydat[!complete.cases(mydat),],3)
pIDvector <-t$patientID
kable( noNA.mydat[noNA.mydat$patientID %in% pIDvector, ], caption = 'Same 3 rows, with NA\'s cleansed')
r<- as.data.frame(sapply(noNA.mydat, class))
names(r)<-c("Data Type")
kable(r, align = 'l',format = "html")
rw <- describe(noNA.mydat, IQR=TRUE)
rw
multi.hist(noNA.mydat[1:10], bcol = "pink")
l <- cor(noNA.mydat[,3:11])
corrplot(l, method = "circle")
# Looking at only malignant datapoints
mydat4<-subset(noNA.mydat, noNA.mydat$class == 4)
# Looking at only benign datapoints
mydat2<-subset(noNA.mydat, noNA.mydat$class == 2)
# Means of malignant columns
mydat4_mean<-colMeans(subset(mydat4, select = c(marginal_adhesion, clump_thicknes, uniformity_cell_size, uniformity_cell_shape, single_eipthelial, bare_nuclei, bland_chromatin, normal_nucleoli, mitoses)))
# Means of benign columns
mydat2_mean<-colMeans(subset(mydat2, select = c(marginal_adhesion, clump_thicknes, uniformity_cell_size, uniformity_cell_shape, single_eipthelial, bare_nuclei, bland_chromatin, normal_nucleoli, mitoses)))
# Plot means of malignant columns vs means of benign columns
# Merge benign and malignant mean tables
total<- merge(mydat4_mean, mydat2_mean, by="row.names")
names(total) <- c("Attributes","Malignant", "Benign")
# Use Melt to transform
df1 <- melt(total,"Attributes")
#df1$Attributes to factor variabls
df1$Attributes<-as.factor(df1$Attributes)
# GGplot
plot <- ggplot(df1, aes(x = Attributes, y=value)) + ggtitle("Benign vs Malignant")+ geom_bar(aes(fill=variable),stat="identity", position ="dodge") +  theme(axis.text.x = element_text(angle=-40, hjust=.1)) +scale_fill_manual(name="Cancer Class",values = c("darkblue","pink"))
plot
B<-table(mydat$class)
names(B) <- c("Benign","Malignant")
barplot(as.matrix(B), main='Benign vs. Malignant Cases', ylab = 'Count of Cases', beside = TRUE,col = c("Pink","darkblue"), legend = rownames(B), ylim = c(0, round_any(nrow(mydat)+50,10)))
# Logistic Regression on all variables on class to view significance of each variable
model_all <- glm(as.factor(noNA.mydat$class) ~ marginal_adhesion + clump_thicknes
+ uniformity_cell_size+uniformity_cell_shape+single_eipthelial+bare_nuclei+bland_chromatin+normal_nucleoli+mitoses
, data=noNA.mydat, family = binomial )
summary(model_all)
#Drill down based on significance
model_sig<-glm(as.factor(noNA.mydat$class) ~ marginal_adhesion+clump_thicknes+uniformity_cell_size+uniformity_cell_shape+bare_nuclei+bland_chromatin+normal_nucleoli, data=noNA.mydat, family = binomial )
# summary(model_sig)
# Logistic Regression of Marginal Adhesion on Class
model_ma<-glm(as.factor(class)~marginal_adhesion, data=noNA.mydat,family = binomial )
xmarginal_adhesion <- seq(0, 10, 0.01)
ymarginal_adhesion <-  predict(model_ma, list(marginal_adhesion = xmarginal_adhesion),type="response")
plot(noNA.mydat$marginal_adhesion, noNA.mydat$class, pch = 10, xlab = "Marginal Adhesion", ylab = "Class", main="Marginal Adhesion Based on Class")
lines(xmarginal_adhesion, ymarginal_adhesion)
noNA.mydat$class[noNA.mydat$class == 2] <- "Benign"
noNA.mydat$class[noNA.mydat$class == '4'] <- "Malignant"
#df1$Attributes to factor variabls
noNA.mydat$class<-as.factor(noNA.mydat$class)
#
# library(ggplot2)
plot <- ggplot(data=noNA.mydat, aes(x=noNA.mydat$clump_thicknes, y=noNA.mydat$marginal_adhesion, col=noNA.mydat$class)) + ggtitle("Marginal adhesions vs Clump Thickness")+  theme(plot.title = element_text(family = "Trebuchet MS", color="darkblue", face="bold", size=18, hjust=0, posi))
plot <- plot + geom_point(aes(shape=noNA.mydat$class,size=.1,alpha= .1)) + scale_color_manual(name="Cancer Class",values=c("darkblue", "red"))+ scale_alpha(guide = 'none')
plot <- plot + xlab("Clump Thickness") + ylab("Marginal Adhesion")
plot
library(ggplot2)
plot <- ggplot(data=noNA.mydat, aes(x=noNA.mydat$clump_thicknes, y=noNA.mydat$mitoses, col=noNA.mydat$class)) + ggtitle("Marginal adhesions vs Mitosi") + theme(plot.title = element_text(family = "Trebuchet MS", color="darkblue", face="bold", size=18, hjust=0))+scale_fill_gradient(low="green",high="darkred")
plot <- plot + geom_point(aes(shape=noNA.mydat$class,size=.1,alpha= .8)) + scale_color_manual(name="Cancer Class",values=c("darkblue", "red"))+ scale_alpha(guide = 'none')
plot <- plot + xlab("Clump Thickness") + ylab("Mitosis")
plot
